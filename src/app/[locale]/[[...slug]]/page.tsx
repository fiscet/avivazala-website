import Image from 'next/image';
import { PortableTextBlock } from 'next-sanity';
import { Locale } from '@lib/i18n';
import SanityContent from '@components/SanityContent';
import { loadPageSlugs, loadPage } from 'sanity-conf/lib/fetchers';
import { Slug } from 'types/sanity.types';
import type { Metadata } from 'next';
import SuspenseLoading from '@components/SuspenseLoading';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
  robots: process.env.ROBOTS,
};

export async function generateStaticParams() {
  const allSlugs = (await loadPageSlugs()).data;

  const res = allSlugs!.flatMap(
    (slugItem: { slug: { [s: string]: unknown } | ArrayLike<unknown> }) => {
      const fieldArray = Object.entries(slugItem.slug);

      const localizedSlugs = fieldArray.filter((item) => item[0] !== '_type');

      return localizedSlugs.map((field, i) => {
        if (field[0] !== '_type') {
          const slug =
            (field[1] as Slug).current === '/'
              ? ''
              : (field[1] as Slug).current;

          return { slug: [field[0], slug] };
        }
      });
    },
  );

  return res;
}

export default async function Home({
  params,
}: {
  params: { locale: Locale; slug?: string[] };
}) {
  const locale = params.locale;
  const slug = params?.slug ?? ['/'];

  const pageData = (await loadPage(locale, slug[0])).data;

  return (
    <main>
      <SuspenseLoading>
        {pageData && pageData.pageImage.url && (
          <div className="flex justify-center">
            <Image
              src={pageData.pageImage.url}
              width={500}
              height={300}
              loading="lazy"
              alt={'Page main image'}
              style={{ width: '100%' }}
            />
          </div>
        )}
        {pageData.body &&
          pageData.body.map((localeBlockContent) => {
            const content = localeBlockContent[locale];

            return (
              <SanityContent
                key={localeBlockContent._key}
                className="mx-auto max-w-2xl"
                value={content as PortableTextBlock[]}
              />
            );
          })}
      </SuspenseLoading>
    </main>
  );
}
